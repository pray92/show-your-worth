<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.texturized.muus.infrastructure.mapper.BuskingMapper">
  <resultMap id="Busking" type="kr.texturized.muus.domain.entity.Busking">
    <constructor>
      <idArg column="id" javaType="Long" />
      <arg column="latitude" javaType="Double" />
      <arg column="longitude" javaType="Double" />
      <arg column="title" javaType="String" />
      <arg column="description" javaType="String" />
      <arg column="managed_start_time" javaType="java.time.LocalDateTime" />
      <arg column="managed_end_time" javaType="java.time.LocalDateTime" />
      <arg column="end_time" javaType="java.time.LocalDateTime" />
    </constructor>
  </resultMap>
  <select id="findById" resultMap="Busking">
    SELECT
      id,
      latitude,
      latitude,
      longitude,
      title,
      description,
      managed_start_time,
      managed_end_time,
      end_time
    FROM
      busking
    WHERE
      id = #{buskingId}
  </select>

  <resultMap id="BuskingSearchResultVo" type="kr.texturized.muus.domain.vo.BuskingSearchResultVo">
    <constructor>
      <idArg column="id" javaType="Long" />
      <arg column="latitude" javaType="Double" />
      <arg column="longitude" javaType="Double" />
    </constructor>
  </resultMap>
  <select id="search" resultMap="BuskingSearchResultVo">
    SELECT
      id, latitude, longitude
    FROM
      busking
    WHERE
        (end_time IS NULL OR end_time > NOW())
        <!--
          This query is for searching buskings in map based on offset coordinate.
          That's the reason why using the number 0.5
        -->
        AND latitude BETWEEN #{latitude} - #{width} * 0.5 AND #{latitude} + #{width} * 0.5
        AND longitude BETWEEN #{longitude} - #{height} * 0.5 AND #{longitude} + #{height} * 0.5
  </select>

  <resultMap id="BuskingProfileResultVo" type="kr.texturized.muus.domain.vo.BuskingProfileResultVo">
    <id property="userId" column="id"/>
    <result property="nickname" column="nickname"/>
    <result property="profileImagePath" column="profile_image_path"/>
    <result property="title" column="title"/>
    <result property="description" column="description"/>
    <result property="latitude" column="latitude"/>
    <result property="longitude" column="longitude"/>
    <result property="managedStartTime" column="managed_start_time"/>
    <result property="managedEndTime" column="managed_end_time"/>
    <result property="endTime" column="end_time"/>
    <collection property="keywords" javaType="java.util.ArrayList" ofType="String">
      <id column="keyword"/>
    </collection>
    <collection property="imagePaths" javaType="java.util.ArrayList" ofType="String">
      <id column="path"/>
    </collection>
  </resultMap>
  <select id="profile" resultMap="BuskingProfileResultVo">
    SELECT
      u.id,
      u.nickname,
      u.profile_image_path,
      b.title,
      b.description,
      b.latitude,
      b.longitude,
      b.managed_start_time,
      b.managed_end_time,
      b.end_time,
      k.keyword,
      i.path
    FROM
      busking b
      LEFT JOIN
        users u ON b.host_id = u.id
      LEFT JOIN
        keyword k ON b.id = k.post_id AND k.post_type = 1 <!-- 1: Busking, 2: Feed, 3: Notice -->
      LEFT JOIN
        image i ON b.id = i.post_id AND i.post_type = 1 <!-- 1: Busking, 2: Feed, 3: Notice -->
    WHERE
      b.id = #{buskingId}
    ORDER BY
      i.upload_order ASC
  </select>

  <select id="isBuskingMadeByUser" resultType="boolean">
    SELECT EXISTS (
      SELECT
        b.id
      FROM
        busking b
        LEFT JOIN users u ON b.host_id = u.id
      WHERE
        1 = 1
        AND b.id = #{buskingId}
        AND u.id = #{userId}
    );
  </select>
</mapper>
